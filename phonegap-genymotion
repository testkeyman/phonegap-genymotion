#!/bin/bash

# phonegap-genymotion v1.0
# Copyright (c) 2013 &npaper
# Licensed under the MIT license
# create by @queenyjina
# twitter @queenyjina
# facebook http://fb.me/queenyjina

#vars
PROJECTPATH=false
DEVICEID=false
DEVICENAME=false
IP=false
FAIL=false
CONN=false

#FAIL
function FAIL() { echo $1; exit; }

#VBoxManage list runningvms
function getDEVICEID() {
	LISTCOUNT=$(VBoxManage list runningvms | grep -c ' ' )
	if [ "$LISTCOUNT" -gt "1" ]; then
		echo "[ Genymotion AndroidVM list ]"
		echo "---------------------------------------------------------------------"
		VBoxManage list runningvms | cut -d '{' -f1 | while read line; do
			let i=i+1
		    echo "[ $i ] $line"
		done
		echo "---------------------------------------------------------------------"
		NUM=false
		while [ ! -z  ${NUM//[0-9]/} ]; do
			read -p "Choose AndroidVM Device Number : " NUM
			if [ $LISTCOUNT -lt $NUM -o $NUM = "0" ] 2>/dev/null ; then 
				NUM=false 
			elif [ -z "${NUM}" ] 2>/dev/null ; then
				NUM=false
			fi
		done
	 	DEVICEID=`VBoxManage list runningvms | sed -n "$NUM"p | awk '{print $14}'`
	 	DEVICENAME=`VBoxManage list runningvms | sed -n "$NUM"p | cut -d '{' -f1`
	 	DEVICENAME=${DEVICENAME//\"/}
	elif [ "$LISTCOUNT" = "1" ]; then
	 	DEVICEID=`VBoxManage list runningvms | sed -n "1"p | awk '{print $14}'`
	 	DEVICENAME=`VBoxManage list runningvms | sed -n "1"p | cut -d '{' -f1`
	 	DEVICENAME=${DEVICENAME//\"/}
	fi
}

#Check Project Path
function getPROJECTPATH() {
	PROJECTPATH=$(pwd)"/platforms/android"
	echo "rebuilding phonegap for android..."
	check=$(phonegap build android | grep error)
	if [ $check ]; then
		echo $check
		exit
	fi
}


#get VM IP address
function getIP() {
	MAC=`VBoxManage showvminfo "$DEVICEID" | grep MAC | grep Host | awk -F ":" '{print $3}' | cut -c 2-13`
	MAC=`echo $MAC | sed -e 's/\([0-9A-Fa-f]\{2\}\)/\1:/g' -e 's/\(.*\):$/\1/' | tr '[:upper:]' '[:lower:]'`
	# Find IP: substitute vname-mac-addr with your vm's mac address in ':' notation
	IP=`arp -a | sed "s/ \(.\):/ 0\1:/" | sed "s/:\(.\):/:0\1:/g"|sed "s/:\(.\):/:0\1:/g"|sed "s/:\(.\)$/:0\1/"|grep $MAC`
	IP=`echo $IP | cut -d "(" -f2 | cut -d ")" -f1`
	if [ ! $IP ] ; then IP=false; fi
}

# connect ADB 
function connectADB() {
	adb disconnect;
    CONN=$(adb connect $IP | grep connected)
    if [ ! -z "${CONN}" ] 2>/dev/null ; then CONN=false; fi
    CONN=$(adb shell start) 
    if [ $CONN ] ; then CONN=false; fi
}

# install APK filse
function installAPK() {
	apks=`find $PROJECTPATH/bin -type f -maxdepth 1 | egrep '\.apk$'`
	apk_list=($apks)
	if [[ ${#apk_list[@]} > 0 ]] ; then
	    # echo "Installing ${apk_list[0]} onto emulator ..."
	    echo "Installing onto emulator ..."
	    adb install -r ${apk_list[0]};
	    echo "Launching application..."
	    launch_str=$(java -jar "$PROJECTPATH"/cordova/appinfo.jar "$PROJECTPATH"/AndroidManifest.xml)
	    adb shell am start -W -a android.intent.action.MAIN -n $launch_str
	else
	    echo "Application package not found, could not install to device"
	    echo " make sure your application is built before deploying."
	fi
}

getDEVICEID; 		if [ "$DEVICEID" = "false" ]; 		then FAIL "[error] Can't find VM DEVICE!"; 		fi
getPROJECTPATH; 	if [ "$PROJECTPATH" = "false" ]; 	then FAIL "[error] Can't find Android platforms!"; 	fi
getIP; 				if [ "$IP" = "false" ]; 			then FAIL "[error] Don't deteced IP address!"; 	fi
connectADB; 		if [ "$CONN" = "false" ]; 			then FAIL "[error] Don't connected device!"; 	fi

# echo "[ name ] $DEVICENAME"
echo "[ name ] $DEVICENAME"
echo "[ ip   ] $IP"

installAPK